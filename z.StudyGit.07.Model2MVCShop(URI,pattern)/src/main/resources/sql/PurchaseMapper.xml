<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap id="purchaseSelectMap" type="purchase">
	<result property="buyer.userId" 		column="buyer_id" 		jdbcType="VARCHAR"/>
	<result property="divyAddr"			column="demailaddr" 	jdbcType="VARCHAR" />
	<result property="divyDate" 			column="dlvy_date" 				jdbcType="DATE" />
	<result property="divyRequest" 		column="dlvy_request" 		jdbcType="VARCHAR" />
	<result property="orderDate" 		column="order_data" 			jdbcType="DATE" />
	<result property="paymentOption" 			column="payment_option" 			jdbcType="CHAR" />
	<result property="purchaseProd.prodNo" 			column="prod_no" 			jdbcType="NUMERIC" />
	<result property="receiverName" 			column="receiver_name" 			jdbcType="VARCHAR" />
	<result property="receiverPhone" 			column="receiver_phone" 			jdbcType="VARCHAR" />
	<result property="tranCode" 			column="tran_status_code" 			jdbcType="CHAR" />
	<result property="tranNo" 			column="tran_no" 			jdbcType="NUMERIC" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction
		VALUES	 (	seq_transaction_tran_no.nextval , #{purchaseProd.prodNo} , 
					#{buyer.userId} , #{paymentOption} , #{receiverName} , 
							#{receiverPhone} , #{divyAddr},#{divyRequest},1,SYSDATE,#{divyDate})
	 </insert>
	 
	<!--  SQL : SELECT ONE -->
	 <select 	id="getPurchase1"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		tran_no,prod_no,buyer_id,payment_option,receiver_name,receiver_phone,demailaddr,dlvy_request,tran_status_code,order_data,dlvy_date
		FROM transaction
		WHERE tran_no = #{value}
	 </select>
	 
	 <select 	id="getPurchase2"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		tran_no,prod_no,buyer_id,payment_option,receiver_name,receiver_phone,demailaddr,dlvy_request,tran_status_code,order_data,dlvy_date
		FROM transaction
		WHERE prod_no = #{value}
	 </select>
 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		payment_option = #{paymentOption},
	   		receiver_name  = #{receiverName},
	   		receiver_phone = #{receiverPhone},
	   		demailaddr     = #{divyAddr},
	   		dlvy_request   = #{divyRequest},
	   		dlvy_date      = #{divyDate}
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 <update	id="updateTranCode"	parameterType="hashMap" >
	   	UPDATE transaction
	   	<set>
	   		TRAN_STATUS_CODE = #{tranCode}
	   	</set>
	   	WHERE tran_no = #{purchase.tranNo}
	 </update>
	 
	 
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="hashMap"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	select * from transaction 
											where BUYER_ID = #{buyerId} 
											
											order by ORDER_DATA 
																) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		
	
	SQL : SELECT ROW Count	  -->
	 <select  id="getTotalCount"  parameterType="string"	resultType="int">
	  	SELECT COUNT(*)
	  	FROM(select * from transaction WHERE BUYER_ID = #{buyerId} ) countTable						
	 </select> 
	   
</mapper>